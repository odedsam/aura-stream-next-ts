{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/app/components/ui/ResponsiveImageOverlay.tsx"],"sourcesContent":["import Image from 'next/image'\nimport { forwardRef, ReactNode } from 'react'\n\ninterface ResponsiveOverlayImageProps {\n  src?: string\n  alt: string\n  mobileSrc?: string\n  tabletSrc?: string\n  desktopSrc?: string\n  overlayOpacity?: string\n  priority?: boolean\n  className?: string\n  overlayClassName?: string\n  imageClassName?: string\n  sizes?: string\n  quality?: number\n  placeholder?: 'blur' | 'empty' | `data:image/${string}`\n  blurDataURL?: string\n  fill?: boolean\n  width?: number\n  height?: number\n  aspectRatio?: string\n  children?: ReactNode\n  [key: string]: any\n}\n\ninterface ImageSources {\n  mobile: string\n  tablet: string\n  desktop: string\n}\n\nconst ResponsiveOverlayImage = forwardRef<HTMLDivElement, ResponsiveOverlayImageProps>(({\n  src,\n  alt,\n  mobileSrc,\n  tabletSrc,\n  desktopSrc,\n  overlayOpacity = 'bg-black/50',\n  priority = false,\n  className = '',\n  overlayClassName = '',\n  imageClassName = '',\n  sizes = '(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw',\n  quality = 100, // Higher quality for SVGs\n  placeholder = 'empty', // SVGs don't support blur placeholder\n  blurDataURL,\n  fill = false,\n  width,\n  height,\n  aspectRatio = 'aspect-[16/9]',\n  children,\n  ...props\n}, ref) => {\n  // Determine if we're working with SVGs or other image formats\n  const isSvg = (src: string): boolean => src.toLowerCase().endsWith('.svg')\n\n  // Get appropriate placeholder based on image type\n  const getPlaceholder = (imageSrc: string): 'blur' | 'empty' => {\n    return isSvg(imageSrc) ? 'empty' : (placeholder as 'blur' | 'empty')\n  }\n\n  // Determine the appropriate image source based on screen size\n  const getImageSources = (): ImageSources => {\n    return {\n      mobile: mobileSrc || src || '',\n      tablet: tabletSrc || desktopSrc || src || '',\n      desktop: desktopSrc || src || ''\n    }\n  }\n\n  const imageSources: string | ImageSources = (desktopSrc || tabletSrc || mobileSrc)\n    ? getImageSources()\n    : src || ''\n\n  return (\n    <div\n      ref={ref}\n      className={`relative overflow-hidden ${aspectRatio} ${className}`}\n      {...props}\n    >\n      {/* Responsive Images */}\n      {typeof imageSources === 'object' ? (\n        <>\n          {/* Mobile Image */}\n          <Image\n            src={imageSources.mobile}\n            alt={alt}\n            fill={fill}\n            width={!fill ? width : undefined}\n            height={!fill ? height : undefined}\n            priority={priority}\n            quality={quality}\n            placeholder={getPlaceholder(imageSources.mobile)}\n            blurDataURL={!isSvg(imageSources.mobile) ? blurDataURL : undefined}\n            sizes={sizes}\n            className={`object-cover transition-transform duration-700 ease-out hover:scale-105 md:hidden ${imageClassName}`}\n          />\n\n          {/* Tablet Image */}\n          <Image\n            src={imageSources.tablet}\n            alt={alt}\n            fill={fill}\n            width={!fill ? width : undefined}\n            height={!fill ? height : undefined}\n            priority={priority}\n            quality={quality}\n            placeholder={getPlaceholder(imageSources.tablet)}\n            blurDataURL={!isSvg(imageSources.tablet) ? blurDataURL : undefined}\n            sizes={sizes}\n            className={`object-cover transition-transform duration-700 ease-out hover:scale-105 hidden md:block lg:hidden ${imageClassName}`}\n          />\n\n          {/* Desktop Image */}\n          <Image\n            src={imageSources.desktop}\n            alt={alt}\n            fill={fill}\n            width={!fill ? width : undefined}\n            height={!fill ? height : undefined}\n            priority={priority}\n            quality={quality}\n            placeholder={getPlaceholder(imageSources.desktop)}\n            blurDataURL={!isSvg(imageSources.desktop) ? blurDataURL : undefined}\n            sizes={sizes}\n            className={`object-cover transition-transform duration-700 ease-out hover:scale-105 hidden lg:block ${imageClassName}`}\n          />\n        </>\n      ) : (\n        /* Single Image */\n        <Image\n          src={imageSources}\n          alt={alt}\n          fill={fill}\n          width={!fill ? width : undefined}\n          height={!fill ? height : undefined}\n          priority={priority}\n          quality={quality}\n          placeholder={getPlaceholder(imageSources)}\n          blurDataURL={!isSvg(imageSources) ? blurDataURL : undefined}\n          sizes={sizes}\n          className={`object-cover transition-transform duration-700 ease-out hover:scale-105 ${imageClassName}`}\n        />\n      )}\n\n      {/* Black Classic Overlay */}\n      <div\n        className={`absolute inset-0 ${overlayOpacity} transition-opacity duration-300 hover:bg-black/40 ${overlayClassName}`}\n        aria-hidden=\"true\"\n      />\n\n      {/* Content Overlay */}\n      {children && (\n        <div className=\"absolute inset-0 z-10 flex items-center justify-center p-4 sm:p-6 lg:p-8\">\n          <div className=\"text-center text-white\">\n            {children}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n})\n\nResponsiveOverlayImage.displayName = 'ResponsiveOverlayImage'\n\nexport default ResponsiveOverlayImage\n\n// Type-safe usage examples with your SVG assets:\n\n/*\n// Hero Section with your responsive SVG assets\n<ResponsiveOverlayImage\n  mobileSrc=\"/assets/hero-home-mobile.svg\"\n  tabletSrc=\"/assets/hero-home-laptop.svg\"\n  desktopSrc=\"/assets/hero-home-desktop.svg\"\n  alt=\"Hero home background\"\n  fill\n  priority\n  className=\"h-screen\"\n  // No need to specify quality or placeholder - defaults are optimized for SVG\n>\n  <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n    <h1 className=\"text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-bold mb-6 leading-tight\">\n      Welcome Home\n    </h1>\n    <p className=\"text-lg sm:text-xl md:text-2xl opacity-90 max-w-3xl mx-auto leading-relaxed\">\n      Experience premium design that adapts perfectly to every device\n    </p>\n    <div className=\"mt-8\">\n      <button className=\"bg-white text-black px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors\">\n        Get Started\n      </button>\n    </div>\n  </div>\n</ResponsiveOverlayImage>\n\n// Alternative layout with gradient overlay\n<ResponsiveOverlayImage\n  mobileSrc=\"/assets/hero-home-mobile.svg\"\n  tabletSrc=\"/assets/hero-home-laptop.svg\"\n  desktopSrc=\"/assets/hero-home-desktop.svg\"\n  alt=\"Hero section\"\n  fill\n  priority\n  overlayOpacity=\"bg-gradient-to-r from-black/70 via-black/50 to-black/30\"\n  className=\"h-[80vh] md:h-screen\"\n>\n  <div className=\"text-left max-w-2xl ml-8 md:ml-16 lg:ml-24\">\n    <h1 className=\"text-3xl md:text-5xl lg:text-6xl font-bold mb-4\">\n      Your Brand\n    </h1>\n    <p className=\"text-base md:text-lg lg:text-xl opacity-90 mb-8\">\n      Crafted for excellence across all platforms\n    </p>\n    <div className=\"space-x-4\">\n      <button className=\"bg-white text-black px-6 py-3 rounded-md font-medium hover:bg-gray-100\">\n        Learn More\n      </button>\n      <button className=\"border border-white text-white px-6 py-3 rounded-md font-medium hover:bg-white hover:text-black transition-colors\">\n        Contact Us\n      </button>\n    </div>\n  </div>\n</ResponsiveOverlayImage>\n\n// Section with custom aspect ratio\n<ResponsiveOverlayImage\n  mobileSrc=\"/assets/hero-home-mobile.svg\"\n  tabletSrc=\"/assets/hero-home-laptop.svg\"\n  desktopSrc=\"/assets/hero-home-desktop.svg\"\n  alt=\"Featured section\"\n  fill\n  overlayOpacity=\"bg-black/40\"\n  className=\"h-96 md:h-[500px] lg:h-[600px] rounded-2xl\"\n  imageClassName=\"rounded-2xl\"\n  overlayClassName=\"rounded-2xl\"\n>\n  <div className=\"text-center\">\n    <h2 className=\"text-2xl md:text-4xl lg:text-5xl font-bold mb-4\">\n      Featured Content\n    </h2>\n    <p className=\"text-sm md:text-base lg:text-lg opacity-80 max-w-xl mx-auto\">\n      Premium SVG graphics optimized for crisp display at any resolution\n    </p>\n  </div>\n</ResponsiveOverlayImage>\n*/\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/app/film-test/page.tsx"],"sourcesContent":["\"use client\";\nimport Image from 'next/image';\nimport ResponsiveOverlayImage from '../components/ui/ResponsiveImageOverlay';\n\nexport default function page() {\n  return (\n    <div className=\"\">\n      <ResponsiveOverlayImage\n        mobileSrc=\"/assets/hero-home-mobile.svg\"\n        tabletSrc=\"/assets/hero-home-laptop.svg\"\n        desktopSrc=\"/assets/hero-home-desktop.svg\"\n        alt=\"Hero home background\"\n        fill\n        priority\n        overlayOpacity=\"bg-black/50\"\n        className=\"h-screen\"\n        quality={100} // Max quality for SVG\n        sizes=\"100vw\" />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,4TAAC;QAAI,WAAU;kBACb,cAAA,4TAAC,4JAAA,CAAA,UAAsB;YACrB,WAAU;YACV,WAAU;YACV,YAAW;YACX,KAAI;YACJ,IAAI;YACJ,QAAQ;YACR,gBAAe;YACf,WAAU;YACV,SAAS;YACT,OAAM;;;;;;;;;;;AAGd","debugId":null}}]
}