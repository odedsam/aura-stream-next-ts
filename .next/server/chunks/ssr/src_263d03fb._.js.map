{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/app/components/ui/CountrySelector.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport Image from 'next/image'\nimport { ChevronDown } from 'lucide-react'\n\ntype Country = {\n  code: string\n  name: string\n  flag: string\n  dialCode: string\n}\n\nconst countries: Country[] = [\n  {\n    code: 'IN',\n    name: 'Ind',\n    flag: 'https://flagcdn.com/w40/in.png',\n    dialCode: '+91',\n  },\n  {\n    code: 'US',\n    name: 'US',\n    flag: 'https://flagcdn.com/w40/us.png',\n    dialCode: '+1',\n  },\n  {\n    code: 'IL',\n    name: 'ISR',\n    flag: 'https://flagcdn.com/w40/il.png',\n    dialCode: '+972',\n  },\n]\n\nexport default function CountrySelector() {\n  const [selected, setSelected] = useState<Country>(countries[0])\n  const [open, setOpen] = useState(false)\n\n  return (\n    <div className=\"relative w-48\">\n      <button\n        onClick={() => setOpen(!open)}\n        className=\"w-full flex items-center justify-between bg-neutral-900 rounded-lg px-4 py-3 border border-neutral-700 hover:border-neutral-500 transition\"\n      >\n        <div className=\"flex items-center gap-2\">\n          <Image\n            src={selected.flag}\n            alt={selected.code}\n            width={24}\n            height={16}\n            className=\"rounded-sm\"\n          />\n          <span className=\"text-white text-sm\">{selected.dialCode}</span>\n        </div>\n        <ChevronDown className=\"text-neutral-400 w-4 h-4\" />\n      </button>\n\n      {open && (\n        <ul className=\"absolute z-10 mt-2 w-full bg-neutral-800 border border-neutral-700 rounded-md shadow-lg overflow-y-auto max-h-60\">\n          {countries.map((country) => (\n            <li\n              key={country.code}\n              onClick={() => {\n                setSelected(country)\n                setOpen(false)\n              }}\n              className=\"flex items-center gap-2 px-4 py-2 cursor-pointer hover:bg-neutral-700 text-sm text-white\"\n            >\n              <Image\n                src={country.flag}\n                alt={country.code}\n                width={20}\n                height={14}\n                className=\"rounded-sm\"\n              />\n              <span>{country.name}</span>\n              <span className=\"ml-auto\">{country.dialCode}</span>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAaA,MAAM,YAAuB;IAC3B;QACE,MAAM;QACN,MAAM;QACN,MAAM;QACN,UAAU;IACZ;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM;QACN,UAAU;IACZ;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM;QACN,UAAU;IACZ;CACD;AAEc,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAW,SAAS,CAAC,EAAE;IAC9D,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBACC,SAAS,IAAM,QAAQ,CAAC;gBACxB,WAAU;;kCAEV,6WAAC;wBAAI,WAAU;;0CACb,6WAAC,4PAAA,CAAA,UAAK;gCACJ,KAAK,SAAS,IAAI;gCAClB,KAAK,SAAS,IAAI;gCAClB,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;0CAEZ,6WAAC;gCAAK,WAAU;0CAAsB,SAAS,QAAQ;;;;;;;;;;;;kCAEzD,6WAAC,wSAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;;;;;;;YAGxB,sBACC,6WAAC;gBAAG,WAAU;0BACX,UAAU,GAAG,CAAC,CAAC,wBACd,6WAAC;wBAEC,SAAS;4BACP,YAAY;4BACZ,QAAQ;wBACV;wBACA,WAAU;;0CAEV,6WAAC,4PAAA,CAAA,UAAK;gCACJ,KAAK,QAAQ,IAAI;gCACjB,KAAK,QAAQ,IAAI;gCACjB,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;0CAEZ,6WAAC;0CAAM,QAAQ,IAAI;;;;;;0CACnB,6WAAC;gCAAK,WAAU;0CAAW,QAAQ,QAAQ;;;;;;;uBAftC,QAAQ,IAAI;;;;;;;;;;;;;;;;AAsB/B","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/app/components/forms/SupportForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport CountrySelector from '../ui/CountrySelector';\nimport { cn } from '@/lib/utils';\n\ninterface CustomInputProps {\n  label: string;\n  type?: 'text' | 'email' | 'tel' | 'textarea';\n  placeholder: string;\n  value: string;\n  onChange: (value: string) => void;\n  required?: boolean;\n  className?: string;\n  prefix?: React.ReactNode;\n}\n\ninterface FormData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  message: string;\n}\n\n// Reusable Input Component\nconst CustomInput: React.FC<CustomInputProps> = ({\n  label,\n  type = 'text',\n  placeholder,\n  value,\n  onChange,\n  required = false,\n  className = '',\n  prefix = null,\n}) => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    onChange(e.target.value);\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-2\">\n      <label className=\"text-white text-sm font-medium\">{label}</label>\n      <div className=\"flex\">\n        {prefix && <div className=\"inline-flex max-w-[4.875rem] items-center z-10\">{prefix}</div>}\n        {type === 'textarea' ? (\n          <textarea\n            placeholder={placeholder}\n            value={value}\n            onChange={handleChange}\n            required={required}\n            rows={4}\n            className={cn(\n              'w-full px-4 py-3 bg-primary border border-quinary rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-red-500 focus:ring-1 focus:ring-red-500 transition-colors resize-none',\n              className,\n            )}\n          />\n        ) : (\n          // className={cn('relative rounded-xl p-6 border border-red-900/20', className)}\n          <input\n            type={type}\n            placeholder={placeholder}\n            value={value}\n            onChange={handleChange}\n            required={required}\n            className={cn(\n              `w-full px-4 py-3 ${\n                prefix ? 'ml-3' : ''\n              } bg-primary border border-quinary rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-red-500 focus:ring-1 focus:ring-red-500 transition-colors`,\n              className,\n            )}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Phone Number Prefix Component\nconst PhonePrefix: React.FC = () => (\n  <div className=\"flex items-center space-x-2 px-2 py-1 bg-quinary rounded border-r border-gray-600\">\n    <div className=\"w-6 h-4 bg-gradient-to-b from-green-500 via-white to-orange-500 rounded-sm\"></div>\n    <span className=\"text-white text-sm\">+91</span>\n  </div>\n);\n\nconst SupportForm: React.FC = () => {\n  const [formData, setFormData] = useState<FormData>({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    message: '',\n  });\n\n  const [agreedToTerms, setAgreedToTerms] = useState<boolean>(false);\n\n  const handleInputChange = (field: keyof FormData, value: string) => {\n    setFormData((prev) => ({ ...prev, [field]: value }));\n  };\n\n  const handleSubmit = () => {\n    if (!agreedToTerms) {\n      alert('Please agree to the Terms of Use and Privacy Policy');\n      return;\n    }\n\n    // Validate required fields\n    const requiredFields = ['firstName', 'lastName', 'email', 'phone', 'message'];\n    const missingFields = requiredFields.filter((field) => !formData[field as keyof FormData]);\n\n    if (missingFields.length > 0) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    console.log('Form submitted:', formData);\n    // Here you can add your form submission logic\n  };\n\n  return (\n    <div className=\"w-full max-w-4xl mx-auto bg-sec p-6 lg:p-8 rounded-lg\">\n      <div className=\"mb-8\">\n        <h2 className=\"text-2xl font-bold mb-2 text-white\">Welcome to our support page!</h2>\n        <p className=\"text-gray-400 text-sm\">We're here to help you with any problems you may be having with our product.</p>\n      </div>\n\n      <div className=\"space-y-6\">\n        {/* Name Fields */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n          <CustomInput\n            label=\"First Name\"\n            placeholder=\"Enter First Name\"\n            value={formData.firstName}\n            onChange={(value) => handleInputChange('firstName', value)}\n            required\n          />\n          <CustomInput\n            label=\"Last Name\"\n            placeholder=\"Enter Last Name\"\n            value={formData.lastName}\n            onChange={(value) => handleInputChange('lastName', value)}\n            required\n          />\n        </div>\n\n        {/* Email and Phone */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n          <CustomInput\n            label=\"Email\"\n            type=\"email\"\n            placeholder=\"Enter your Email\"\n            value={formData.email}\n            onChange={(value) => handleInputChange('email', value)}\n            required\n          />\n          <CustomInput\n            label=\"Phone Number\"\n            type=\"tel\"\n            placeholder=\"Enter Phone Number\"\n            value={formData.phone}\n            onChange={(value) => handleInputChange('phone', value)}\n            prefix={<CountrySelector />}\n            required\n          />\n        </div>\n\n        {/* Message */}\n        <CustomInput\n          label=\"Message\"\n          type=\"textarea\"\n          placeholder=\"Enter your Message\"\n          value={formData.message}\n          onChange={(value) => handleInputChange('message', value)}\n          required\n        />\n\n        {/* Terms Checkbox */}\n        <div className=\"flex items-start space-x-3\">\n          <input\n            type=\"checkbox\"\n            id=\"terms\"\n            checked={agreedToTerms}\n            onChange={(e) => setAgreedToTerms(e.target.checked)}\n            className=\"mt-1 w-4 h-4 bg-gray-800 border border-gray-600 rounded focus:outline-none focus:ring-2 focus:ring-red-500 text-red-600\"\n            required\n          />\n          <label htmlFor=\"terms\" className=\"text-sm text-gray-300 leading-relaxed\">\n            I agree with <span className=\"text-white underline cursor-pointer\">Terms of Use</span> and{' '}\n            <span className=\"text-white underline cursor-pointer\">Privacy Policy</span>\n          </label>\n        </div>\n\n        {/* Submit Button */}\n        <button\n          type=\"button\"\n          onClick={handleSubmit}\n          className=\"w-full bg-red-600 hover:bg-red-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-offset-gray-900\">\n          Send Message\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SupportForm;\n"],"names":[],"mappings":"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","debugId":null}}]
}