{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/app/components/ui/Tags.tsx"],"sourcesContent":["// components/ui/Tags.tsx\nimport { cn } from '@/lib/utils';\nimport * as React from 'react';\n\ninterface BoxTagProps {\n  icon?: React.ReactNode;\n  className?: string;\n}\n\n/**\n * Generic icon container for tags, used in cards, badges, etc.\n */\nexport const BoxTag: React.FC<BoxTagProps> = ({ icon, className }) => {\n  return (\n    <div\n      className={cn(\n        'w-10 h-10 rounded-lg bg-white/10 flex items-center justify-center shrink-0',\n        className,\n      )}>\n      {icon}\n    </div>\n  );\n};\n\n/**\n * Example tag for displaying a language icon.\n * Extend this for different types if needed.\n */\nexport const LanguageTag: React.FC<BoxTagProps> = ({ icon, className }) => {\n  return <BoxTag icon={icon} className={cn('bg-blue-600', className)} />;\n};\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;AACzB;;;AAWO,MAAM,SAAgC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE;IAC/D,qBACE,6WAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8EACA;kBAED;;;;;;AAGP;AAMO,MAAM,cAAqC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE;IACpE,qBAAO,6WAAC;QAAO,MAAM;QAAM,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;;;;;;AAC1D","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/app/components/cards/DeviceCard.tsx"],"sourcesContent":["import { cn } from '@/lib/utils';\nimport { BoxTag } from '@/app/components/ui/Tags';\n\ninterface DeviceCardProps {\n  icon?: React.ReactNode;\n  title: string;\n  description: string;\n  className?: string;\n}\n\nexport const DeviceCard: React.FC<DeviceCardProps> = ({ icon, title, description, className }) => {\n  return (\n    <div\n      className={cn('relative rounded-xl p-6 border border-red-900/20', className)}\n      style={{\n        background: 'linear-gradient(315deg, rgba(229, 0, 0, 0.5) 0%, rgba(229, 0, 0, 0) 81%, #0F0F0F 100%)',\n      }}>\n      <div className=\"flex items-center gap-3 mb-4\">\n        <BoxTag icon={icon} />\n        <h3 className=\"text-white text-xl font-medium\">{title}</h3>\n      </div>\n\n      <p className=\"text-gray-300 text-sm leading-relaxed\">{description}</p>\n    </div>\n  );\n};\n\nexport default DeviceCard;\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AASO,MAAM,aAAwC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE;IAC3F,qBACE,6WAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,oDAAoD;QAClE,OAAO;YACL,YAAY;QACd;;0BACA,6WAAC;gBAAI,WAAU;;kCACb,6WAAC,uIAAA,CAAA,SAAM;wBAAC,MAAM;;;;;;kCACd,6WAAC;wBAAG,WAAU;kCAAkC;;;;;;;;;;;;0BAGlD,6WAAC;gBAAE,WAAU;0BAAyC;;;;;;;;;;;;AAG5D;uCAEe","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/app/components/images/ResponsiveImageOverlay.tsx"],"sourcesContent":["import Image from 'next/image'\nimport { forwardRef, ReactNode } from 'react'\nimport { cn } from '@/lib/utils' // Assuming standard cn utility path\n\ninterface ResponsiveOverlayImageProps {\n  mobileSrc: string\n  tabletSrc: string\n  desktopSrc: string\n  alt: string\n  overlayOpacity?: string\n  className?: string\n  children?: ReactNode\n}\n\nconst ResponsiveOverlayImage = forwardRef<HTMLDivElement, ResponsiveOverlayImageProps>(({\n  mobileSrc,\n  tabletSrc,\n  desktopSrc,\n  alt,\n  overlayOpacity = 'bg-black/50',\n  className,\n  children\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn('relative overflow-hidden', className)}\n    >\n      {/* Mobile Image - Loads first for mobile-first approach */}\n      <Image\n        src={mobileSrc}\n        alt={alt}\n        fill\n        priority // Critical for LCP\n        quality={50}\n        sizes=\"(max-width: 767px) 100vw, 0px\" // Only load on mobile\n        className=\"object-cover md:hidden\"\n        loading=\"eager\" // Force immediate loading\n        fetchPriority=\"high\" // Browser hint for high priority\n      />\n\n      {/* Tablet Image */}\n      <Image\n        src={tabletSrc}\n        alt={alt}\n        fill\n        priority\n        quality={50}\n        sizes=\"(min-width: 768px) and (max-width: 1023px) 100vw, 0px\"\n        className=\"object-cover hidden md:block lg:hidden\"\n        loading=\"eager\"\n        fetchPriority=\"high\"\n      />\n\n      {/* Desktop Image */}\n      <Image\n        src={desktopSrc}\n        alt={alt}\n        fill\n        priority\n        quality={50}\n        sizes=\"(min-width: 1024px) 100vw, 0px\"\n        className=\"object-cover hidden lg:block\"\n        loading=\"eager\"\n        fetchPriority=\"high\"\n      />\n\n      {/* Overlay */}\n      <div\n        className={cn('absolute inset-0 pointer-events-none', overlayOpacity)}\n        aria-hidden=\"true\"\n      />\n\n      {/* Content */}\n      {children && (\n        <div className=\"absolute inset-0 z-10 flex items-center justify-center p-4\">\n          {children}\n        </div>\n      )}\n    </div>\n  )\n})\n\nResponsiveOverlayImage.displayName = 'ResponsiveOverlayImage'\n\nexport default ResponsiveOverlayImage\n\n// Ultra-fast usage for hero sections:\n/*\n<ResponsiveOverlayImage\n  mobileSrc=\"/assets/hero-home-mobile.svg\"\n  tabletSrc=\"/assets/hero-home-laptop.svg\"\n  desktopSrc=\"/assets/hero-home-desktop.svg\"\n  alt=\"Hero background\"\n  className=\"h-screen\"\n>\n  <div className=\"text-center text-white max-w-4xl\">\n    <h1 className=\"text-4xl md:text-6xl font-bold mb-4\">\n      Lightning Fast Loading\n    </h1>\n    <p className=\"text-lg md:text-xl opacity-90\">\n      Optimized for Core Web Vitals\n    </p>\n  </div>\n</ResponsiveOverlayImage>\n\n// Performance Tips:\n// 1. Add these images to your public folder exactly as specified\n// 2. Optimize SVGs before uploading (remove unnecessary elements)\n// 3. Consider using next/dynamic for below-fold images\n// 4. Use this component only for above-fold content for best LCP scores\n*/\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA,wMAAiC,oCAAoC;;;;;AAYrE,MAAM,uCAAyB,CAAA,GAAA,oUAAA,CAAA,aAAU,AAAD,EAA+C,CAAC,EACtF,SAAS,EACT,SAAS,EACT,UAAU,EACV,GAAG,EACH,iBAAiB,aAAa,EAC9B,SAAS,EACT,QAAQ,EACT,EAAE;IACD,qBACE,6WAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;;0BAG1C,6WAAC,4PAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAK;gBACL,IAAI;gBACJ,QAAQ;gBACR,SAAS;gBACT,OAAM,gCAAgC,sBAAsB;;gBAC5D,WAAU;gBACV,SAAQ,QAAQ,0BAA0B;;gBAC1C,eAAc,OAAO,iCAAiC;;;;;;0BAIxD,6WAAC,4PAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAK;gBACL,IAAI;gBACJ,QAAQ;gBACR,SAAS;gBACT,OAAM;gBACN,WAAU;gBACV,SAAQ;gBACR,eAAc;;;;;;0BAIhB,6WAAC,4PAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAK;gBACL,IAAI;gBACJ,QAAQ;gBACR,SAAS;gBACT,OAAM;gBACN,WAAU;gBACV,SAAQ;gBACR,eAAc;;;;;;0BAIhB,6WAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;gBACtD,eAAY;;;;;;YAIb,0BACC,6WAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;AAKX;AAEA,uBAAuB,WAAW,GAAG;uCAEtB,uBAEf,sCAAsC;CACtC;;;;;;;;;;;;;;;;;;;;;;;AAuBA","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/app/test/page.tsx"],"sourcesContent":["import { DeviceCardGrid } from '../components/cards/DeviceCard';\nimport ResponsiveOverlayImage from '../components/images/ResponsiveImageOverlay';\n\nexport default function page() {\n  return (\n    <div className=\"\">\n      <ResponsiveOverlayImage\n        mobileSrc=\"/assets/hero-home-mobile.svg\"\n        tabletSrc=\"/assets/hero-home-laptop.svg\"\n        desktopSrc=\"/assets/hero-home-desktop.svg\"\n        alt=\"Hero background\"\n        className=\"h-screen\"\n      />\n      <DeviceCardGrid />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC,6JAAA,CAAA,UAAsB;gBACrB,WAAU;gBACV,WAAU;gBACV,YAAW;gBACX,KAAI;gBACJ,WAAU;;;;;;0BAEZ,6WAAC,gJAAA,CAAA,iBAAc;;;;;;;;;;;AAGrB","debugId":null}}]
}