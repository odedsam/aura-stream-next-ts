{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/app/components/images/ResponsiveImageOverlay.tsx"],"sourcesContent":["import Image from 'next/image'\nimport { forwardRef, ReactNode } from 'react'\nimport { cn } from '@/lib/utils' // Assuming standard cn utility path\n\ninterface ResponsiveOverlayImageProps {\n  mobileSrc: string\n  tabletSrc: string\n  desktopSrc: string\n  alt: string\n  overlayOpacity?: string\n  className?: string\n  children?: ReactNode\n}\n\nconst ResponsiveOverlayImage = forwardRef<HTMLDivElement, ResponsiveOverlayImageProps>(({\n  mobileSrc,\n  tabletSrc,\n  desktopSrc,\n  alt,\n  overlayOpacity = 'bg-black/50',\n  className,\n  children\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn('relative overflow-hidden', className)}\n    >\n      {/* Mobile Image - Loads first for mobile-first approach */}\n      <Image\n        src={mobileSrc}\n        alt={alt}\n        fill\n        priority // Critical for LCP\n        quality={50}\n        sizes=\"(max-width: 767px) 100vw, 0px\" // Only load on mobile\n        className=\"object-cover md:hidden\"\n        loading=\"eager\" // Force immediate loading\n        fetchPriority=\"high\" // Browser hint for high priority\n      />\n\n      {/* Tablet Image */}\n      <Image\n        src={tabletSrc}\n        alt={alt}\n        fill\n        priority\n        quality={50}\n        sizes=\"(min-width: 768px) and (max-width: 1023px) 100vw, 0px\"\n        className=\"object-cover hidden md:block lg:hidden\"\n        loading=\"eager\"\n        fetchPriority=\"high\"\n      />\n\n      {/* Desktop Image */}\n      <Image\n        src={desktopSrc}\n        alt={alt}\n        fill\n        priority\n        quality={50}\n        sizes=\"(min-width: 1024px) 100vw, 0px\"\n        className=\"object-cover hidden lg:block\"\n        loading=\"eager\"\n        fetchPriority=\"high\"\n      />\n\n      {/* Overlay */}\n      <div\n        className={cn('absolute inset-0 pointer-events-none', overlayOpacity)}\n        aria-hidden=\"true\"\n      />\n\n      {/* Content */}\n      {children && (\n        <div className=\"absolute inset-0 z-10 flex items-center justify-center p-4\">\n          {children}\n        </div>\n      )}\n    </div>\n  )\n})\n\nResponsiveOverlayImage.displayName = 'ResponsiveOverlayImage'\n\nexport default ResponsiveOverlayImage\n\n// Ultra-fast usage for hero sections:\n/*\n<ResponsiveOverlayImage\n  mobileSrc=\"/assets/hero-home-mobile.svg\"\n  tabletSrc=\"/assets/hero-home-laptop.svg\"\n  desktopSrc=\"/assets/hero-home-desktop.svg\"\n  alt=\"Hero background\"\n  className=\"h-screen\"\n>\n  <div className=\"text-center text-white max-w-4xl\">\n    <h1 className=\"text-4xl md:text-6xl font-bold mb-4\">\n      Lightning Fast Loading\n    </h1>\n    <p className=\"text-lg md:text-xl opacity-90\">\n      Optimized for Core Web Vitals\n    </p>\n  </div>\n</ResponsiveOverlayImage>\n\n// Performance Tips:\n// 1. Add these images to your public folder exactly as specified\n// 2. Optimize SVGs before uploading (remove unnecessary elements)\n// 3. Consider using next/dynamic for below-fold images\n// 4. Use this component only for above-fold content for best LCP scores\n*/\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA,wMAAiC,oCAAoC;;;;;AAYrE,MAAM,uCAAyB,CAAA,GAAA,oUAAA,CAAA,aAAU,AAAD,EAA+C,CAAC,EACtF,SAAS,EACT,SAAS,EACT,UAAU,EACV,GAAG,EACH,iBAAiB,aAAa,EAC9B,SAAS,EACT,QAAQ,EACT,EAAE;IACD,qBACE,6WAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;;0BAG1C,6WAAC,4PAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAK;gBACL,IAAI;gBACJ,QAAQ;gBACR,SAAS;gBACT,OAAM,gCAAgC,sBAAsB;;gBAC5D,WAAU;gBACV,SAAQ,QAAQ,0BAA0B;;gBAC1C,eAAc,OAAO,iCAAiC;;;;;;0BAIxD,6WAAC,4PAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAK;gBACL,IAAI;gBACJ,QAAQ;gBACR,SAAS;gBACT,OAAM;gBACN,WAAU;gBACV,SAAQ;gBACR,eAAc;;;;;;0BAIhB,6WAAC,4PAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAK;gBACL,IAAI;gBACJ,QAAQ;gBACR,SAAS;gBACT,OAAM;gBACN,WAAU;gBACV,SAAQ;gBACR,eAAc;;;;;;0BAIhB,6WAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;gBACtD,eAAY;;;;;;YAIb,0BACC,6WAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;AAKX;AAEA,uBAAuB,WAAW,GAAG;uCAEtB,uBAEf,sCAAsC;CACtC;;;;;;;;;;;;;;;;;;;;;;;AAuBA","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/app/components/ui/Buttons.tsx"],"sourcesContent":["import * as React from 'react';\nimport Link from 'next/link';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap font-manrope font-semibold rounded-lg text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        dark: 'bg-[#1a1a1a] text-white hover:bg-[#2a2a2a] hover:text-gray-100 transition-all duration-200 ease-in-out hover:shadow-lg',\n        red: 'bg-[#E50000] text-white hover:bg-[#cc0000] font-semibold hover:text-gray-100 transition-all duration-200 ease-in-out hover:shadow-lg hover:shadow-red-500/25',\n        darker:\n          'bg-[#141414] text-white hover:bg-[#242424] hover:text-gray-100 transition-all duration-200 ease-in-out hover:shadow-lg hover:scale-105',\n        bordered:\n          'bg-[#141414] text-white hover:bg-[#242424] border-3 border-quinary hover:text-gray-100 transition-all duration-200 ease-in-out hover:shadow-lg hover:scale-105',\n      },\n      size: {\n        default: 'h-12 px-8 py-4',\n        sm: 'h-9 px-6 py-3 text-base',\n        lg: 'h-14 px-10 py-5 text-xl',\n        icon: 'h-12 w-12',\n      },\n    },\n    defaultVariants: {\n      variant: 'dark',\n      size: 'default',\n    },\n  },\n);\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement>, VariantProps<typeof buttonVariants> {\n  icon?: React.ReactNode;\n  iconPosition?: 'left' | 'right';\n  href?: string;\n  target?: string;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement & HTMLAnchorElement, ButtonProps>(\n  ({ className, variant, size, icon, iconPosition = 'left', children, href, target, ...props }, ref) => {\n    const content = icon ? (\n      iconPosition === 'right' ? (\n        <>\n          {children}\n          <span className=\"flex-shrink-0\">{icon}</span>\n        </>\n      ) : (\n        <>\n          <span className=\"flex-shrink-0\">{icon}</span>\n          {children}\n        </>\n      )\n    ) : (\n      children\n    );\n\n    const classes = cn(buttonVariants({ variant, size, className }));\n\n    if (href) {\n      return (\n        <Link href={href} target={target} className={classes}>\n          {content}\n        </Link>\n      );\n    }\n\n    return (\n      <button className={classes} ref={ref} {...props}>\n        {content}\n      </button>\n    );\n  },\n);\n\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n\n/*\nðŸ§ª USAGE EXAMPLES:\n\n//  Click action\n<Button onClick={() => console.log('Clicked')} variant=\"red\">\n  Click Me\n</Button>\n\n//  Navigation (internal)\n<Button href=\"/dashboard\" variant=\"bordered\">\n  Go to Dashboard\n</Button>\n\n//  Navigation (external)\n<Button href=\"https://example.com\" target=\"_blank\" variant=\"dark\">\n  External Link\n</Button>\n\n//  With icon (left)\n<Button variant=\"dark\" icon={<ArrowLeft className=\"w-4 h-4\" />}>\n  Back\n</Button>\n\n//  With icon (right)\n<Button variant=\"bordered\" icon={<ArrowRight className=\"w-4 h-4\" />} iconPosition=\"right\">\n  Next\n</Button>\n\n//  Icon only button\n<Button variant=\"red\" size=\"icon\" icon={<Plus className=\"w-5 h-5\" />} />\n\n*/\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACvB,oSACA;IACE,UAAU;QACR,SAAS;YACP,MAAM;YACN,KAAK;YACL,QACE;YACF,UACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAUF,MAAM,uBAAS,CAAA,GAAA,oUAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,eAAe,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,OAAO,EAAE;IAC5F,MAAM,UAAU,OACd,iBAAiB,wBACf;;YACG;0BACD,6WAAC;gBAAK,WAAU;0BAAiB;;;;;;;qCAGnC;;0BACE,6WAAC;gBAAK,WAAU;0BAAiB;;;;;;YAChC;;uBAIL;IAGF,MAAM,UAAU,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;QAAE;QAAS;QAAM;IAAU;IAE7D,IAAI,MAAM;QACR,qBACE,6WAAC,2RAAA,CAAA,UAAI;YAAC,MAAM;YAAM,QAAQ;YAAQ,WAAW;sBAC1C;;;;;;IAGP;IAEA,qBACE,6WAAC;QAAO,WAAW;QAAS,KAAK;QAAM,GAAG,KAAK;kBAC5C;;;;;;AAGP;AAGF,OAAO,WAAW,GAAG;;CAIrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA","debugId":null}},
    {"offset": {"line": 273, "column": 3}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/app/test/page.tsx"],"sourcesContent":["import { X } from 'lucide-react';\nimport ResponsiveOverlayImage from '../components/images/ResponsiveImageOverlay';\nimport { Button } from '../components/ui/Buttons';\nimport { ArrowRight } from 'lucide-react';\n\nexport default function page() {\n  return (\n    <div className=\"\">\n      <ResponsiveOverlayImage\n        mobileSrc=\"/assets/hero-home-mobile.svg\"\n        tabletSrc=\"/assets/hero-home-laptop.svg\"\n        desktopSrc=\"/assets/hero-home-desktop.svg\"\n        alt=\"Hero background\"\n        className=\"h-screen\"\n      />\n\n      <div className=\"flex flex-col justify-center items-center w-[600px] h-[600px] mx-auto\">\n        <div className=\"inline-flex mx-auto size-[500px] bg-purple-900300 text-center justify-center items-center\">\n          <Button variant=\"bordered\" size=\"default\" icon={<ArrowRight className=\"w-5 h-5\" />} iconPosition=\"right\">\n            Continue\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAEe,SAAS;IACtB,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC,6JAAA,CAAA,UAAsB;gBACrB,WAAU;gBACV,WAAU;gBACV,YAAW;gBACX,KAAI;gBACJ,WAAU;;;;;;0BAGZ,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAI,WAAU;8BACb,cAAA,6WAAC,0IAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAW,MAAK;wBAAU,oBAAM,6WAAC,sSAAA,CAAA,aAAU;4BAAC,WAAU;;;;;;wBAAc,cAAa;kCAAQ;;;;;;;;;;;;;;;;;;;;;;AAOnH","debugId":null}}]
}