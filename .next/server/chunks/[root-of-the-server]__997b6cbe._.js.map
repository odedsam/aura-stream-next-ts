{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/odedsamuel/Desktop/stream-vibe-app/stream-vibe/src/app/api/browse/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\n// import { prisma } from '@/lib/prisma'\n\n// export async function GET() {\n//   const shows = await prisma.tvShow.findMany()\n//   return NextResponse.json(shows)\n// }\n\n// export async function POST(request: Request) {\n//   const data = await request.json()\n//   if (!data.title) return NextResponse.json({ error: 'Title is required' }, { status: 400 })\n\n//   const newShow = await prisma.tvShow.create({\n//     data: {\n//       title: data.title,\n//       description: data.description,\n//     },\n//   })\n//   return NextResponse.json(newShow, { status: 201 })\n// }\n\nexport async function GET(request: Request) {\n  const lang = 'en'; // או קבל את זה מפרמטרים של הבקשה\n  const apiKey = process.env.TV_API_KEY; // שמור את מפתח ה-API כמשתנה סביבה\n\n  if (!apiKey) {\n    console.error('API key not found in environment variables.');\n    return NextResponse.json({ error: 'API key missing' }, { status: 500 });\n  }\n\n  const apiUrl = `https://tv-api.com/${lang}/API/Top250Movies/${apiKey}`;\n\n  try {\n    const response = await fetch(apiUrl); // הנחיה: בדרך כלל יש דומיין בסיסי ל-API\n    if (!response.ok) {\n      console.error(`Failed to fetch data from external API: ${response.status}`);\n      return NextResponse.json({ error: 'Failed to fetch external data' }, { status: response.status });\n    }\n    const data = await response.json();\n    console.log('Data from external API:', data);\n    return NextResponse.json(data, { status: 200 });\n  } catch (error) {\n    console.error('Error fetching from external API:', error);\n    return NextResponse.json({ error: 'Error fetching external data' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAqBO,eAAe,IAAI,OAAgB;IACxC,MAAM,OAAO,MAAM,iCAAiC;IACpD,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU,EAAE,kCAAkC;IAEzE,IAAI,CAAC,QAAQ;QACX,QAAQ,KAAK,CAAC;QACd,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAkB,GAAG;YAAE,QAAQ;QAAI;IACvE;IAEA,MAAM,SAAS,CAAC,mBAAmB,EAAE,KAAK,kBAAkB,EAAE,QAAQ;IAEtE,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,SAAS,wCAAwC;QAC9E,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,QAAQ,KAAK,CAAC,CAAC,wCAAwC,EAAE,SAAS,MAAM,EAAE;YAC1E,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAgC,GAAG;gBAAE,QAAQ,SAAS,MAAM;YAAC;QACjG;QACA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,2BAA2B;QACvC,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ;QAAI;IAC/C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA+B,GAAG;YAAE,QAAQ;QAAI;IACpF;AACF","debugId":null}}]
}