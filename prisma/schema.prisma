datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  username       String?  @unique
  hashedPassword String
  firstName      String?
  lastName       String?
  avatarPath     String?
  bio            String?
  isVerified     Boolean  @default(false)
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  sessions       Session[]
  favorites      FavoriteItem[]
  savedItems     SavedItem[]
  watchlists     Watchlist[]
  watchlistItems WatchlistItem[]

  @@index([email], name: "idx_user_email")
  @@index([username], name: "idx_user_username")
  @@index([isActive], name: "idx_user_is_active")
}

model Session {
  id         String   @id @default(cuid())
  userId     String
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  userAgent  String?
  ipAddress  String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], name: "idx_session_user")
  @@index([expiresAt], name: "idx_session_expires_at")
}

model Watchlist {
  id          String   @id @default(cuid())
  userId      String
  name        String
  description String?
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user  User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  items WatchlistItem[]

  @@index([userId], name: "idx_watchlist_user")
  @@index([isPublic], name: "idx_watchlist_is_public")
  @@index([name], name: "idx_watchlist_name")
}

model WatchlistItem {
  id          String    @id @default(cuid())
  userId      String
  watchlistId String?
  movieId     Int?
  showId      Int?
  addedAt     DateTime  @default(now())
  watchedAt   DateTime?
  isWatched   Boolean   @default(false)
  notes       String?

  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  watchlist Watchlist? @relation(fields: [watchlistId], references: [id], onDelete: Cascade)

  @@unique([userId, movieId], name: "unique_watchlist_movie_per_user")
  @@unique([userId, showId], name: "unique_watchlist_show_per_user")
  @@index([userId], name: "idx_watchlistitem_user")
  @@index([watchlistId], name: "idx_watchlistitem_watchlist")
  @@index([movieId], name: "idx_watchlistitem_movie")
  @@index([showId], name: "idx_watchlistitem_show")
  @@index([isWatched], name: "idx_watchlistitem_is_watched")
  @@index([addedAt], name: "idx_watchlistitem_added_at")
}

model FavoriteItem {
  id         String   @id @default(cuid())
  userId     String
  movieId    Int?
  showId     Int?
  createdAt  DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, movieId], name: "unique_favorite_movie_per_user")
  @@unique([userId, showId], name: "unique_favorite_show_per_user")
  @@index([userId], name: "idx_favorite_user")
  @@index([movieId], name: "idx_favorite_movie")
  @@index([showId], name: "idx_favorite_show")
  @@index([createdAt], name: "idx_favorite_created_at")
}

model SavedItem {
  id         String   @id @default(cuid())
  userId     String
  movieId    Int?
  showId     Int?
  createdAt  DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, movieId], name: "unique_saved_movie_per_user")
  @@unique([userId, showId], name: "unique_saved_show_per_user")
  @@index([userId], name: "idx_saved_user")
  @@index([movieId], name: "idx_saved_movie")
  @@index([showId], name: "idx_saved_show")
}
